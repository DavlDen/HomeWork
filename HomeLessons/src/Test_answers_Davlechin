ФИО
Давлечин Денис Анатольевич

1. Какова разница между абстрактным классом и интерфейсом?
Абстрактные классы как и интерфейсы призваны отделить интерфейс от реализации. Можно сказать, что абстрактный класс является чем-то промежуточным между обычным классом и интерфейсом. Абстрактный класс объединяет дочерние классы, объекты абстрактного класса не создаются. Абстрактные классы содержат абстрактные методы, которые должны быть обязательно переопределены в дочерних классах, иначе они тоже станут абстрактными. Для абстрактных классов и методов используется ключевое слово abstract. Интерфейс является более высокой степень абстракции и содержат только имена методов, аргументы и типы возвращаемых значений. Для обозначения интерфейсов используется ключевое слово interface.

2. Как «насильно» вызвать сборку мусора?
Смысл сборки мусора заключается в очищении уже не используемой памяти, но так как это достаточно затратный по времени процесс, виртуальная java-машина запускает его только в критических ситуациях. Поэтому если возникает необходимость вызвать принудительно сборку мусора, следует использовать метод System.gс(). Причем он не гарантирует вызова сборщика мусора, а как бы показывает java-машине, что его следует вызвать.

3. Когда требуется явное приведение классов?
Явное приведение классов требуется при нисходящем преобразовании, то есть когда объект родительского класса преобразуется к объекту дочернего класса. Например, можно преобразовать объекты класса Object к String, если мы точно знаем, что все объекты будут строкового типа. Обратное (восходящем) преобразование происходит автоматически.

4. Чем конструкторы отличаются от других методов?
По-идеи конструктор это тоже метод, но служащий для создания объектов класса. Конструкторы как и обычные методы могут содержать аргументы, если конструктор явно не задан, то используется конструктор "по-умолчанию". Основным отличием конструктора от обычного метода является то, что конструктор никогда ничего не возвращает.

5. Можно ли вызывать конструкторы один из другого, если их в классе несколько?
Вызвать один конструктор из другого можно используя ключевое слово this, это позволяет избежать повторения кода. 

6. В чем разница между JDK и JRE?
JDK является комплектом разработчика и содержит компилятор, стандартные библиотеки классов и JRE. Отдельно JRE используется на пользовательских машинах и содержит виртуальную java-машину для запуска приложений.

7. Имеет ли значение в каком порядке перехватывать исключения FileNotFoundException и IOExceptipon?
Все исключения описываются классом Trowable, который имеет два типа error, то есть системные ошибки на которые мы не можем повлиять, и exception, то есть ошибки пользователя, которые можно устранить. Так как исключение FileNotFoundException является наследником от IOException, то сначала следует перехватывать его, а уже потом IOException. То есть сначала мы перехватываем более детальное исключение, что "Файл не найден", а потом общее исключение ввода/вывода.

8. Могут ли внутренние классы, описанные внутри метода, иметь доступ к локальным переменным этого метода?
Внутренние классы используются для объединения логически связанных классов и управления доступом к ним. Внутренним классам доступны только неизменяемые переменные метода.

9. Как подкласс может обратиться к методу или конструктору из суперкласса?
Для обращения к методу или конструктору суперкласса подкласс должен наследовать от него, для этого используется ключевое слово extends и имя родительского класса. Для обращения из дочернего класса к базовому используется ключевое слово super.

10. В чем разница между очередью и стеком?
Очередь реализует дисциплину FIFO, то есть "Первый пришел, первый ушел", а стек - дисциплину LIFO, "Последний пришел, первый ушел".

11. Что вам приходит в голову, когда вы слышите о новом поколении (young generation) в Java?


12. Есть два класса: A и B. Класс B должен информировать класс A когда случается некое важное событие. Какой design-pattern вы должны реализовать?
В данном случае следует использовать design-pattern Observer, который как раз используется для наблюдения за состоянием объекта.

13. Какой модификатор доступа надо указать в классе, чтобы доступ к нему имели только классы из того же пакета?
Для того чтобы к классу имели доступ только классы из того же пакета у него должен отсутствовать модификатор доступа , то есть реализован доступ по умолчанию (ключевое слово отсутствует). 

14. Чем отличается статический внутренний класс от просто внутреннего класса?
Статические внутренние классы не связаны со своими внешними классами и поэтому не могут напрямую к ним обратиться, для обращения используются объекты.

15. Можно ли обратиться к нестатической переменной из статического метода?
Из статических методов нельзя напрямую обратиться к нестатической переменной, но это можно сделать с помощью объекта.

16. Какие типы данных есть в Java?
В java существуют примитивные и ссылочные типы. К примитивным типам относятся: int, char, boolean, float, double, long и тд. К ссылочным типам относятся классы, интерфейсы, массивы. Существуют ссылочные типы которые соответствуют всем примитивным типам. Отдельно следует выделить тип String, который используется для хранения строковых данных.

17. Чем отличаются переопределение (Override) и перегрузка (Overload)?
Переопределение использует аннотацию @Override и используется изменения поведения родительского метода. Переопределить можно в том числе и методы класса Object.

18. Что такое итератор?
Итератор позволяет реализовать перемещение по последовательности объектов и выбирать определенные, причем ему все равно, с каким типом последовательностей работать. Итератор содержит три важных метода: next() - позволяет получить следующий элемент последовательности начиная с первого, hasNext() - проверяет, не закончилась ли последовательность, remove() - удаляет последний объект последовательности.

19. Перечислите основные категории исключительных ситуаций
В дополнение к описанию типов исключений, который описаны в 7 вопросе, можно сказать, что исключения бывают контролируемыми на этапе компиляции (checked) и неконтролируемыми (unchecked). К контролируемым относятся Trowable и Exception, к неконтролируемым Error и RuntimeException. Для отслеживания исключений используется блок try, а для перехвата блок catch, который находится за try. Исключения не обязательно обрабатывать сразу, его можно передавать выше, но чем подробнее будет описано возбуждаемое исключение, тем проще его будет устранить. Так же следует сказать про RuntimeException, которое наследует от Exception и содержит наиболее частые пользовательские исключение, такие как деление на ноль, нулевые ссылки и тд.

20. Какая разница между throw и throws?
Оператор throw используется когда исключение будут сразу обработано в catch, а throws когда метод возбуждает исключения, но не обрабатывает их, после throws указывается, какие исключения возможно придется обработать методу при обращении к текущему.

21. Зачем нужен блок finally?
Блок finally используется для выполнения части кода несмотря на возникшее до этого исключение. Применяется для того чтобы вернуть в исходное состояние что-либо кроме памяти, тк память освобождается сборщиком мусора.

22. Что такое finalize?
Finalize это метод, который вызывается перед запуском сборщика мусора и позволяет выполнить какое-нибудь завершающее действие или вызвать ошибку, если это действие невозможно.

22. Перечислите все виды внутренних классов
Если класс определяется внутри другого класса, то он называется вложенным. Вложенные классы бывают двух типов: статические и нестатические. Как уже было сказано ранее, объекты статического класса не имеют связи с объектами внешнего класса. Нестатические вложенные классы называются внутренними классами и их объекты имеют доступ к объектам внешнего класса.
